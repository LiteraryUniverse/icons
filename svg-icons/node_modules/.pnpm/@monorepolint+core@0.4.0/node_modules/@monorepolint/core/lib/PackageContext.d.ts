/*!
 * Copyright 2019 Palantir Technologies, Inc.
 *
 * Licensed under the MIT license. See LICENSE file in the project root for details.
 *
 */
import { PackageJson } from "@monorepolint/utils";
import { ResolvedConfig } from "./Config";
import { Context } from "./Context";
import { WorkspaceContext } from "./WorkspaceContext";
interface FailureOptions {
    file: string;
    message: string;
    longMessage?: string;
    fixer?: () => void;
}
export declare class PackageContext implements Context {
    readonly packageDir: string;
    readonly resolvedConfig: ResolvedConfig;
    readonly parent?: Context | undefined;
    depth: number;
    failed: boolean;
    protected printedName: boolean;
    constructor(packageDir: string, resolvedConfig: ResolvedConfig, parent?: Context | undefined);
    getName(): string;
    getPackageJsonPath(): string;
    getPackageJson(): PackageJson;
    addWarning({ message, longMessage }: FailureOptions): void;
    addError({ file, message, longMessage, fixer }: FailureOptions): void;
    isFailure(): boolean;
    finish(): void;
    setFailed(): void;
    getWorkspaceContext(): WorkspaceContext;
    private print;
    private printWarning;
    private printError;
    private getMessage;
    private printName;
}
export {};
//# sourceMappingURL=PackageContext.d.ts.map