declare type ObjectOrArray = Record<string, unknown> | Array<unknown>;
export declare function camelize(str: string): string;
export declare function decamelize(str: string, sep?: string): string;
export declare function pascalize(str: string): string;
export declare function depascalize(str: string, sep?: string): string;
export declare function camelizeKeys(obj: ObjectOrArray): any[] | Record<string, unknown>;
export declare function decamelizeKeys(obj: ObjectOrArray, sep?: string): any[] | Record<string, unknown>;
export declare function pascalizeKeys(obj: ObjectOrArray): any[] | Record<string, unknown>;
export declare function depascalizeKeys(obj: ObjectOrArray, sep?: string): any[] | Record<string, unknown>;
export declare function camelizeKeysInPlace(obj: ObjectOrArray): Record<string, unknown> | unknown[];
export declare function decamelizeKeysInPlace(obj: ObjectOrArray, sep?: string): Record<string, unknown> | unknown[];
export declare function pascalizeKeysInPlace(obj: ObjectOrArray): Record<string, unknown> | unknown[];
export declare function depascalizeKeysInPlace(obj: ObjectOrArray, sep?: string): Record<string, unknown> | unknown[];
export {};
